[{
		"id": "mqtt_AWS",
		"type": "MQTT",
		"configuration": {
			"brokers": [{
					"host": "app4x36tdag17.iot.eu-west-1.amazonaws.com",
					"port": 8883,
					"ssl": true,
					"retryInterval": 3000,
					"credentials": {
						"type": "cert.PEM",
						"caCert" : "/etc/tb-gateway/conf/cert/rootCA.pem",
						"privateKey" : "/etc/tb-gateway/conf/cert/SimButton.private.key",
						"cert" : "/etc/tb-gateway/conf/cert/SimButton.cert.pem"
					},
					"mapping": [{
							"topicFilter": "sensors",
							"converter": {
								"type": "json",
								"filterExpression": "",
								"deviceNameJsonExpression": "${$.serialNumber}",
								"attributes": [{
										"type": "string",
										"key": "model",
										"value": "${$.model}"
									}
								],
								"timeseries": [{
										"type": "double",
										"key": "temperature",
										"value": "${$.temperature}"
									}
								]
							}
						}, {
							"topicFilter": "sensor/+/temperature",
							"converter": {
								"type": "json",
								"filterExpression": "",
								"deviceNameTopicExpression": "(?<=sensor/)(.*?)(?=/temperature)",
								"timeout": 60000,
								"timeseries": [{
										"type": "double",
										"key": "temperature",
										"value": "${$.value}"
									}
								]
							}
						}
					],
					"connectRequests": [{
							"topicFilter": "sensors/connect",
							"deviceNameJsonExpression": "${$.serialNumber}"
						}, {
							"topicFilter": "sensor/+/connect",
							"deviceNameTopicExpression": "(?<=sensor/)(.*?)(?=/connect)"
						}
					],
					"disconnectRequests": [{
							"topicFilter": "sensors/disconnect",
							"deviceNameJsonExpression": "${$.serialNumber}"
						}, {
							"topicFilter": "sensor/+/disconnect",
							"deviceNameTopicExpression": "(?<=sensor/)(.*?)(?=/disconnect)"
						}
					],
					"attributeRequests": [{
							"topicFilter": "sensors/attributes",
							"deviceNameJsonExpression": "${$.serialNumber}",
							"attributeKeyJsonExpression": "${$.key}",
							"requestIdJsonExpression": "${$.requestId}",
							"clientScope": false,
							"responseTopicExpression": "sensors/${deviceName}/attributes/${responseId}",
							"valueExpression": "{\"${attributeKey}\":\"${attributeValue}\"}"
						}, {
							"topicFilter": "sensors/+/attributes/+/request/+",
							"deviceNameTopicExpression": "(?<=sensors/)(.*?)(?=/attributes)",
							"attributeKeyTopicExpression": "(?<=attributes/)(.*?)(?=/request)",
							"requestIdTopicExpression": "(?<=request/)(.*?)($)",
							"clientScope": false,
							"responseTopicExpression": "sensors/${deviceName}/attributes/${attributeKey}/response/${requestId}",
							"valueExpression": "${attributeValue}"
						}
					],
					"attributeUpdates": [{
							"deviceNameFilter": ".*",
							"attributeFilter": ".*",
							"topicExpression": "sensor/${deviceName}/${attributeKey}",
							"valueExpression": "{\"${attributeKey}\":\"${attributeValue}\"}"
						}
					],
					"serverSideRpc": [{
							"deviceNameFilter": ".*",
							"methodFilter": "echo",
							"requestTopicExpression": "sensor/${deviceName}/request/${methodName}/${requestId}",
							"responseTopicExpression": "sensor/${deviceName}/response/${methodName}/${requestId}",
							"responseTimeout": 10000,
							"valueExpression": "${params}"
						}, {
							"deviceNameFilter": ".*",
							"methodFilter": "no-reply",
							"requestTopicExpression": "sensor/${deviceName}/request/${methodName}/${requestId}",
							"valueExpression": "${params}"
						}
					]
				}
			]
		}
	}
]
